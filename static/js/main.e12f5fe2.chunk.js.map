{"version":3,"sources":["components/ErrorBoundry.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Card","id","name","username","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAsBeA,E,kDAnBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKL,MAAMO,a,GAhBCC,aCaZC,EAbF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAChC,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BN,EAA1B,cACpB,sBAAKI,UAAU,KAAf,UACI,6BAAKH,IACL,4BAAIC,IACJ,4BAAIC,WCeLI,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAX,GAAIQ,EAAOG,GAAGX,GACdC,KAAMO,EAAOG,GAAGV,KAChBC,SAAUM,EAAOG,GAAGT,SACpBC,MAAOK,EAAOG,GAAGR,OAJZQ,SCEdC,EAXG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,uBACAV,UAAU,yBACVW,KAAK,SACLC,YAAY,oBACZC,SAAUH,KCEHI,EARA,SAAC5B,GACZ,OACI,qBAAK6B,MAAO,CAAEC,UAAU,SAAUC,OAAQ,iBAAkBC,OAAQ,SAApE,SACKhC,EAAMO,YC4CJ0B,E,kDAzCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAK7B,SAAS,CAACiB,YAAaY,EAAMC,OAAOC,SAdzC,EAAKpC,MAAQ,CACTiB,OAAQ,GACRK,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBe,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKpC,SAAS,CAACY,OAAQwB,S,oBAQ7C,WAAU,IAAD,EAC2BrC,KAAKJ,MAA7BiB,EADH,EACGA,OAAQK,EADX,EACWA,YACVoB,EAAiBzB,EAAO0B,QAAO,SAAAC,GACjC,OAAOA,EAAMlC,KAAKmC,cAAcC,SAASxB,EAAYuB,kBAEzD,OAAQ5B,EAAO8B,OAIP,sBAAKlC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcnB,KAAK6B,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUhB,OAASyB,WARlC,gD,GA1BKnC,aCKHyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e12f5fe2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooops. This is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst Card = ({ id, name, username, email }) => {\r\n    return(\r\n        <div className='bg-light-green dib br3 pas ma2 grow bw2 shadow-5'>\r\n            <img alt='robot' src={`https://robohash.org/${id}?200x200`} />\r\n            <div className='tc'>\r\n                <h2>{name}</h2>\r\n                <p>{username}</p>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        username={robots[i].username}\r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ( {searchField, searchChange} ) => {\r\n    return (\r\n        <input\r\n        className='ma2 pa2 light-green tc'\r\n        type='search' \r\n        placeholder='Search your robot' \r\n        onChange={searchChange}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{ overflowY:'scroll', border: '2px solid blue', height: '490px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n            .then(users=> this.setState({robots: users})\r\n        )\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchField: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchField } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        });\r\n        return !robots.length ?\r\n             <h1>LOADING...</h1>\r\n            :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>ROBOFRIENDS</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={ filteredRobots }/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}